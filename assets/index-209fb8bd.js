(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))t(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&t(o)}).observe(document,{childList:!0,subtree:!0});function c(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(n){if(n.ep)return;n.ep=!0;const i=c(n);fetch(n.href,i)}})();function u(e,r,c){const t=document.createElement("div");t.className="inputWrapper";const n=document.createElement("label");n.textContent=r,n.setAttribute("for",c);const i=document.createElement("input");i.setAttribute("type","text"),i.id=c;const o=document.createElement("button");o.textContent="Calculate";const s=document.createElement("p");return s.className="output",o.onclick=f=>{const p=f.target.parentElement,m=p.querySelector("input").value;p.querySelector(".output").textContent=String(e(m))},t.appendChild(n),t.appendChild(i),t.appendChild(o),t.appendChild(s),t}function h(){const e=document.createElement("div");return e.className="calcWrapper",e.appendChild(u(b,"Non-recursive Fibonacci","normalFib")),e.appendChild(u(a,"Recursive Fibonacci","recFib")),e}function b(e){e=Number(e);const r=[];for(let c=0;c<e;c++){const t=r.length;if(t<2){r.push(1);continue}r.push(Number(r[t-1])+Number(r[t-2]))}return r}function a(e,r=0,c=0){e=Number(e);const t=r+c||1;return--e===0?t:[t,a(e,t,r)]}function g(){const e=document.createElement("div");return e.className="calcWrapper",e.appendChild(u(r=>y(r,l),"Recursive Merge Sort","recMergeSort")),e.querySelector("input").value="2,5,3,6,1,4,87,2",e}function y(e,r){return r(e.split(",").filter(c=>c!="["&&c!="]").map(c=>c.trim()))}function l(e){if(e.length<2)return e;if(e.length===2)return Number(e[0])>Number(e[1])?[e[1],e[0]]:e;const r=Math.ceil(e.length/2);let c=l(e.slice(0,r)),t=l(e.slice(r));const n=[];for(;c.length||t.length;){if(Number(c[0])>Number(t[0])||c[0]===void 0){n.push(t[0]),t=t.slice(1);continue}n.push(c[0]),c=c.slice(1)}return n}const d=document.querySelector("#app");d.appendChild(h());d.appendChild(g());
